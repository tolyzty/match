<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"	
    xsi:schemaLocation="
 		 http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-4.3.xsd
    	http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/mvc
    	http://www.springframework.org/schema/mvc/spring-mvc.xsd " >
    	
    	
    	

    	
    <!-- 配置组件扫描 -->
    
    
		<!-- 定时任务 -->
       <!--  <task:annotation-driven scheduler="myScheduler"/>    -->
       <!-- 线程池 -->
       <!--  <task:scheduler id="myScheduler" pool-size="5"/>   -->
    	    <!-- task 定时任务 -->    
 <task:annotation-driven/>
        <!-- 配置组件扫描 -->
	<context:component-scan base-package="com.match" >
		<!--  <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" /> -->
	</context:component-scan>
  <!--
    &lt;!&ndash; 引入同文件夹下的redis属性配置文件 &ndash;&gt;
    <import resource="redis-context.xml"/>-->
    
    <!-- 扫描 所有的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.match.dao"/>
	</bean>
    
    <!-- 加载属性文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:properties/jdbc.properties"/>
	</bean>
	
    <!-- 通过proxyFilters属性配置 -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
   	 	<property name="slowSqlMillis" value="10000" />
   	 	<property name="logSlowSql"    value="true" />
   	 	<property name="mergeSql"      value="true" />
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >
	    <property name="driverClassName">
	      <value>${jdbc_driverClassName}</value>
	    </property>
	    <property name="url">
	      <value>${jdbc_url}</value>
	    </property>
	    <property name="username">
	      <value>${jdbc_username}</value>
	    </property>
	    <property name="password">
	      <value>${jdbc_password}</value>
	    </property>
	    <!-- 连接池最大使用连接数 -->
	    <property name="maxActive">
	      <value>${jdbc_maxActive}</value>
	    </property>
	    <!-- 初始化连接大小 -->
	    <property name="initialSize">
	      <value>${jdbc_initialSize}</value>
	    </property>
	    <!-- 获取连接最大等待时间 -->
	    <property name="maxWait">
	      <value>${jdbc_maxWait}</value>
	    </property>
	    <!-- 连接池最大空闲 （DruidDataSource 中已弃用）
	    <property name="maxIdle">
	      <value>20</value>
	    </property>
	     -->
	    <!-- 连接池最小空闲 -->
	    <property name="minIdle">
	      <value>${jdbc_minIdle}</value>
	    </property>
	    <!-- 自动清除无用连接 -->
	    <property name="removeAbandoned">
	      <value>${jdbc_removeAbandoned}</value>
	    </property>
	    <!-- 清除无用连接的等待时间 -->
	    <property name="removeAbandonedTimeout">
	      <value>${jdbc_removeAbandonedTimeout}</value>
	    </property>
	    <!-- 连接属性 -->
	    <property name="connectionProperties">
	      	<value>${jdbc_connectionProperties}</value>
	    </property>
	    
	   <!-- 以下是连接池监控配置信息 -->
	   <property name="proxyFilters">
        	<list>
           		 <ref bean="stat-filter" />
        	</list>
   	  </property>
   	  <property name="useGloalDataSourceStat" value="true" />
	</bean>
	
	<!-- 配置sqlsessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:config/mybatis-config.xml"/>
	</bean>
    
    
    
    <!-- 视图映射器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<description>  
	    		假如逻辑试图名为 "hello"，因此 viewResolver 将解析成 /WEB-INF/html/hello.html  
		</description>
	    <property name="prefix" value="/WEB-INF/jsp/"/>  
	    <property name="suffix" value=".jsp"/>  
	</bean>
	

	
      <!-- 配置AJAX返回乱码 -->
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">  
         <property name="defaultCharset" value="UTF-8"/>  
    </bean>  
    
	<!-- 对数据源进行事务管理 -->
	<bean name="transactionManager" 
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        p:dataSource-ref="dataSource"/>
        
    <!-- 使用annotation定义事务-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" /> 
    
</beans>